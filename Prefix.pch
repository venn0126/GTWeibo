#ifdef __OBJC__
#import <Foundation/Foundation.h>
#import <objc/objc-runtime.h>
#import <UIKit/UIKit.h>
#import <syslog.h>
#import <sys/sysctl.h>
#import <CoreLocation/CoreLocation.h>
#import <dlfcn.h>


#import "./src/Header/TaoHeaders.h"
#import "./src/Tool/GTTool.h"



#define GuanUserDefaults [NSUserDefaults standardUserDefaults]
#define GuanNotificationCenter [NSNotificationCenter defaultCenter]



/// 日志打印
/// DEBUG：编译器的的默认字段，可以在～/tweak.sh中设置debug=0/1进行更新
#ifdef DEBUG
    #define TLog(FORMAT, ...) syslog(LOG_ERR, "[TaoLi] %s\n", [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
    #define HLog(bytes, length) \
        NSMutableString *LogString_##string = [NSMutableString string]; \
        for (int i = 0; i < length; i++) [LogString_##string appendFormat:@"%02hhX", bytes[i]]; \
        syslog(LOG_ERR, "+[TaoLi] %s", LogString_##string.UTF8String)
    #define MengLog(log) [GTFileTools gt_saveLog:log]
#else
    #define TLog(...) (void)0
    #define HLog(...) (void)0
    #define MengLog(log) [GTFileTools gt_saveLog:@""]

#endif


/// 主线程的封装
#define dispatch_main_async_safe(block)\
    if (dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL) == dispatch_queue_get_label(dispatch_get_main_queue())) {\
        block();\
    } else {\
        dispatch_async(dispatch_get_main_queue(), block);\
    } \

/// 子线程
#define dispatch_global_async(block) dispatch_async(dispatch_get_global_queue(0, 0),block)
#define kLSMDataCachehDirectory @"/Library/Caches"
#define kMengSCBLogDirectoryName @"yycxdriver"

/// 秒延迟
#define MengsDelay(s, block) (dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(s * NSEC_PER_SEC)), dispatch_get_main_queue(), block))
/// 毫秒延迟
#define MengMsDelay(ms, block) (dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(ms / 1000.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), block))

/// 主线程的封装
#define dispatch_main_async_safe(block)\
    if (dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL) == dispatch_queue_get_label(dispatch_get_main_queue())) {\
        block();\
    } else {\
        dispatch_async(dispatch_get_main_queue(), block);\
    } \


#endif //__OBJC__